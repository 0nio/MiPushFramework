buildscript {
    repositories {
        maven { url 'https://maven.fabric.io/public' }
    }

    dependencies {
        classpath 'io.fabric.tools:gradle:1.+'
    }
}
apply plugin: 'com.android.application'
apply plugin: 'io.fabric'

repositories {
    maven { url 'https://maven.fabric.io/public' }
}


android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion
    defaultConfig {
        applicationId "top.trumeet.mipush"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode rootProject.ext.versionCode
        versionName rootProject.ext.versionName
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        resConfigs "zh"
        ndk {
            abiFilters 'armeabi', 'armeabi-v7a', 'mips', 'x86'
        }

        def fabricKey = null
        if (project.rootProject.file('local.properties').exists()) {
            Properties properties = new Properties()
            properties.load(project.rootProject.file('local.properties').newDataInputStream())
            fabricKey = properties.getProperty('FABRIC_KEY')
        }
        manifestPlaceholders = [fabricKey:fabricKey != null ?
                fabricKey : System.getenv("FABRIC_KEY")]
        // buildConfigField "boolean", "SNAPSHOT", "\"" + rootProject.ext.snapshot + "\""
    }
    buildTypes {
        debug {
            signingConfig signingConfigs.debug
        }
        release {
            signingConfig signingConfigs.debug
            minifyEnabled false
            //shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    signingConfigs {
        debug {
            try {
                def locale = null
                def keystorePwd = null
                def alias = null
                def pwd = null
                if (project.rootProject.file('local.properties').exists()) {
                    Properties properties = new Properties()
                    properties.load(project.rootProject.file('local.properties').newDataInputStream())
                    locale = properties.getProperty("KEY_LOCATE")
                    keystorePwd = properties.getProperty("KEYSTORE_PASSWORD")
                    alias = properties.getProperty("KEYSTORE_ALIAS")
                    pwd = properties.getProperty("KEY_PASSWORD")
                }

                storeFile file(locale != null ? locale : "./.yuuta.jks")
                storePassword keystorePwd != null ?
                        keystorePwd : System.getenv("KEYSTORE_PASS")
                keyAlias alias != null ?
                        alias : System.getenv("ALIAS_NAME")
                keyPassword pwd != null ?
                        pwd : System.getenv("ALIAS_PASS")
            }
            catch (ignored) {
                throw new InvalidUserDataException("You should define KEYSTORE_PASSWORD and KEY_PASSWORD in local.properties.")
            }
        }
        release {
            // 满足下面两个条件时需要此配置
            // 1. Gradle版本 >= 2.14.1
            // 2. Android Gradle Plugin 版本 >= 2.2.0
            // 作用是只使用旧版签名，禁用V2版签名模式
            v2SigningEnabled false
        }
    }
}

android.applicationVariants.all { variant ->
    String taskName = String.format("remove%sStubClasses", variant.name.capitalize())
    task "${taskName}" {
        doLast { delete "${buildDir}/intermediates/classes/${variant.name}" + "/android" }
    }
    variant.processJavaResources.dependsOn(taskName)
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    compile('com.github.AndroidSnippet:SetupWizardLibCompat:0.3', {
        exclude group: 'com.android.support'
    })
    // Recycler
    implementation('me.drakeet.multitype:multitype:3.3.0', {
        exclude group: 'com.android.support'
    })
    // Support
    implementation "com.android.support:recyclerview-v7:$supportLibraryVersion"
    implementation "com.android.support:appcompat-v7:$supportLibraryVersion"
    // Preference
    implementation 'moe.shizuku.preference:preference:2.2.0'
    implementation 'moe.shizuku.preference:preference-switchcompat:2.0.2'
    implementation 'moe.shizuku.preference:preference-dialog-android:2.2.0'
    implementation 'moe.shizuku.preference:preference-simplemenu:2.2.0'
    // Markdown
    compile 'com.zzhoujay.richtext:richtext:2.5.4'
    implementation project(':common')
    compile('com.crashlytics.sdk.android:crashlytics:2.8.0@aar') {
        transitive = true
    }
}